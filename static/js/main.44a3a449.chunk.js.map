{"version":3,"sources":["Mapp.js","SidebarItem.js","App.js","serviceWorker.js","index.js"],"names":["mapboxgl","window","LngLat","lng","lat","arrayify","lngLatLike","minus","lngLat1","lngLat2","add","average","_len","arguments","length","lngLats","Array","_key","reduce","sum","ll","map","l","topOpacity","scans","1910","year","url","corners","1979-baldwin","fullUrl","partUrl","feature","_ref","_ref2","Object","slicedToArray","type","properties","geometry","coordinates","McCone_Hall","mapboxOptions","container","zoom","minZoom","maxZoom","style","version","sources","raster-tiles","tiles","tileSize","layers","id","source","minzoom","maxzoom","maxBounds","customAttribution","center","debugMode","location","hostname","Mapp","_Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","imageOverlayAdded","state","lastMarkerUpdate","lastCenterAverage","currentOverlaySourceName","addSource","scanId","console","log","setImageOverlay","getLayer","paint","setPaintProperty","addLayer","raster-opacity","setImage","scan","Error","currentSource","setNewMarkers","updateCorners","markers","setLngLat","getLngLat","updateCornersAutomated","force","automated","Date","now","setTimeout","getSource","setCoordinates","concat","JSON","stringify","calculateBorders","handleMarkerChange","cornerId","lngLat","delta","m0","m1","m2","m3","setData","features","setupMap","Marker","draggable","color","on","addTo","data","line-color","line-opacity","line-width","e","initialMap","boxZoom","disable","doubleClickZoom","addControl","NavigationControl","AttributionControl","compact","signup","newMapId","inherits","createClass","key","value","Map","react_default","a","createElement","className","Component","SidebarItem","active","href","App","currentMap","notifyChild","f","hash","replace","addEventListener","newMap","setState","sidebarList","push","src_SidebarItem_0","Mapp_Mapp","Boolean","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44a3a449.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './mapbox-gl.css';\nimport './Mapp.css';\nimport debug from './debug';\nconst mapboxgl = window.mapboxgl\n\n\n\n// Ohhh ... HAHAHHA ... funny ... :( lat and lng are \"inverted\" in mapbox\n// Always use these utility functions\nconst LatLng = (lat, lng) => [lng, lat];\nconst LngLat = (lng, lat) => [lng, lat];\nconst arrayify = (lngLatLike) => (lngLatLike.lng) ? [lngLatLike.lng,lngLatLike.lat] : lngLatLike;\nconst minus = (lngLat1, lngLat2) => [arrayify(lngLat1)[0]-arrayify(lngLat2)[0], arrayify(lngLat1)[1]-arrayify(lngLat2)[1]]\nconst add = (lngLat1, lngLat2) => [arrayify(lngLat1)[0]+arrayify(lngLat2)[0], arrayify(lngLat1)[1]+arrayify(lngLat2)[1]]\nconst average = (...lngLats) => lngLats.reduce((sum,ll) => [ll.lng+sum[0],ll.lat+sum[1]],[0,0]).map(l => l/lngLats.length)\n\nlet topOpacity = 0.9;\n\nexport const scans = {\n  '1910': {year: '1910', url:'./compressed-maps/1910-smaller.jpg', corners: [[-122.25368381624293,37.87666271788129], [-122.25205864680986,37.8690054551667], [-122.26567321115618,37.867273073426304], [-122.26725246910868,37.87479602627526],]},\n  '1979-baldwin': {year: '1979', url:'./compressed-maps/1979-baldwin.jpg', corners: [[-122.27242632492538,37.87075445739155], [-122.25552588983287,37.88255299743762], [-122.24401514609337,37.87263226468354], [-122.26089919151718,37.86083689391005],]},\n};\n\nconst fullUrl = partUrl => partUrl;\n\nconst feature = ([fromLngLat, toLngLat]) => ({\n  \"type\": \"Feature\",\n  \"properties\": {},\n  \"geometry\": {\n    \"type\": \"LineString\",\n    \"coordinates\": [\n      fromLngLat,\n      toLngLat,\n    ]\n  },\n});\n\n\n// Thank you, Earth Science & Map Library <3\nconst McCone_Hall = LatLng(37.873931, -122.259491)\n\nconst mapboxOptions = {\n  container: 'map', // container id\n  zoom: 13,\n  minZoom: 11,\n  maxZoom: 18,\n  style: {\n    \"version\": 8,\n    \"sources\": {\n      \"raster-tiles\": {\n        \"type\": \"raster\",\n        \"tiles\": [\n          \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n          // \"http://b.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        ],\n        \"tileSize\": 128\n      }\n    },\n    \"layers\": [{\n      \"id\": \"simple-tiles\",\n      \"type\": \"raster\",\n      \"source\": \"raster-tiles\",\n      \"minzoom\": 0,\n      \"maxzoom\": 24\n    }]\n  },\n\n  maxBounds: [LngLat(-122.552, 37.673), LngLat(-122.0467, 37.987)],\n\n  // Attribution from: http://services.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer?f=pjson\n  customAttribution: 'Satellite map source: Esri, DigitalGlobe, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community',\n  center: McCone_Hall,\n}\n\nconst debugMode = window.location.hostname === 'localhost'\n\n\nexport class Mapp extends Component {\n  constructor(props) {\n    super();\n    this.imageOverlayAdded = false;\n    this.sources = {}; // Doesn't actually get you the source\n    this.state = {\n    }\n\n    let map;\n    this.lastMarkerUpdate = 0;\n    this.lastCenterAverage = [0,0];\n\n    this.currentOverlaySourceName = null;\n\n\n    this.addSource = (scanId, coordinates) => {\n      if (!this.sources[scanId]) {\n        console.log('adding source')\n        this.sources[scanId] = this.map.addSource(scanId, {\n          type: 'image',\n          url: fullUrl(scans[scanId].url),\n          coordinates: scans[scanId].corners,\n        });\n      }\n    }\n\n    this.setImageOverlay = (scanId) => {\n      if (!this.imageOverlayAdded) {\n        this.imageOverlayAdded = true;\n        this.currentOverlaySourceName = scanId;\n\n        this.map.addLayer({\n          \"id\": \"imageOverlay\",\n          \"source\": scanId,\n          \"type\": \"raster\",\n          \"paint\": {\n            \"raster-opacity\": topOpacity\n          },\n        });\n      } else {\n        map.getLayer('imageOverlay').source = scanId;\n        console.log(map.getLayer('imageOverlay').paint['raster-opacity'] = topOpacity);\n          map.setPaintProperty('imageOverlay', 'raster-opacity', topOpacity)\n      }\n    }\n\n    this.setImage = scanId => {\n      const scan = scans[scanId];\n      if (!scan) {\n        throw new Error('Scan doesnt exist:', scanId);\n      }\n      this.currentSource = scanId;\n      this.addSource(scanId, scan.corners);\n      this.setImageOverlay(scanId);\n\n      this.setNewMarkers(scan.corners);\n      this.updateCorners();\n    }\n    this.setNewMarkers = (corners) => {\n      if (!debugMode) return;\n      this.markers[0].setLngLat(corners[0])\n      this.markers[1].setLngLat(corners[1])\n      this.markers[2].setLngLat(corners[2])\n      this.markers[3].setLngLat(corners[3])\n\n      // the middle point\n      this.lastCenterAverage = average(this.markers[0].getLngLat(),this.markers[1].getLngLat(),this.markers[2].getLngLat(),this.markers[3].getLngLat());\n      this.markers[4].setLngLat(this.lastCenterAverage);\n    }\n\n    this.updateCornersAutomated = () => {\n      this.updateCorners(false, true);\n    }\n    this.updateCorners = (force, automated) => {\n      if (this.currentSource == null) {\n        return;\n      }\n\n      // Debounce or else we will consistently crash\n      if (!force && Date.now() - this.lastMarkerUpdate < 300) {\n        if (!automated) {\n          setTimeout(this.updateCornersAutomated, 300 - Date.now() - this.lastMarkerUpdate + 2);\n        }\n        return;\n      }\n      this.lastMarkerUpdate = Date.now();\n\n      let source = this.map.getSource(this.currentOverlaySourceName);\n      let scan = scans[this.currentOverlaySourceName];\n\n      source.setCoordinates(scan.corners);\n      console.log(`'${this.currentOverlaySourceName}': ${JSON.stringify(scan,null,0)}`)\n      this.setNewMarkers(scan.corners)\n      this.calculateBorders();\n    }\n    this.handleMarkerChange = (cornerId, lngLat, force) => {\n      if (this.currentSource == null) {\n        return;\n      }\n\n      let source = this.map.getSource(this.currentOverlaySourceName);\n      let scan = scans[this.currentOverlaySourceName];\n      if (!source || !scan) {\n        console.log('Invariant breached Something was empty',source,scan)\n        return;\n      }\n\n      if (cornerId === 4) {\n        // four leaf clover! Oh wait, it's zero indexed ... FIVE LEAF CLOVER!!!\n        const delta = minus(lngLat,this.lastCenterAverage)\n        scan.corners[0] = add(this.markers[0].getLngLat(), delta);\n        scan.corners[1] = add(this.markers[1].getLngLat(), delta);\n        scan.corners[2] = add(this.markers[2].getLngLat(), delta);\n        scan.corners[3] = add(this.markers[3].getLngLat(), delta);\n      } else {\n        scan.corners[0] = arrayify(this.markers[0].getLngLat());\n        scan.corners[1] = arrayify(this.markers[1].getLngLat());\n        scan.corners[2] = arrayify(this.markers[2].getLngLat());\n        scan.corners[3] = arrayify(this.markers[3].getLngLat());\n      }\n      this.updateCorners(force);\n    }\n\n    this.calculateBorders = () => {\n      if (!debugMode) return;\n      let m0 = [this.markers[0].getLngLat().lng, this.markers[0].getLngLat().lat];\n      let m1 = [this.markers[1].getLngLat().lng, this.markers[1].getLngLat().lat];\n      let m2 = [this.markers[2].getLngLat().lng, this.markers[2].getLngLat().lat];\n      let m3 = [this.markers[3].getLngLat().lng, this.markers[3].getLngLat().lat];\n      let sourceTB = this.map.getSource('borderTB');\n      sourceTB.setData({\n        \"type\": \"FeatureCollection\",\n        \"features\": [\n          feature([\n            m2,\n            add(m2,minus(m0, m1)),\n          ]),\n          feature([\n            m3,\n            add(m3,minus(m1, m0)),\n          ]),\n          feature([\n            m0,\n            add(m0,minus(m2, m3)),\n          ]),\n          feature([\n            m1,\n            add(m1,minus(m3, m2)),\n          ]),\n        ]\n      });\n      let sourceLR = this.map.getSource('borderLR');\n      sourceLR.setData({\n        \"type\": \"FeatureCollection\",\n        \"features\": [\n          feature([\n            m3,\n            add(m3,minus(m1, m2)),\n          ]),\n          feature([\n            m0,\n            add(m0,minus(m2, m1)),\n          ]),\n          feature([\n            m1,\n            add(m1,minus(m3, m0)),\n          ]),\n          feature([\n            m2,\n            add(m2,minus(m0, m3)),\n          ]),\n        ]\n      });\n    }\n\n    this.setupMap = () => {\n      map = this.map\n\n      if (debugMode) {\n        // Markers are useful for debugging\n        this.markers = [\n          new mapboxgl.Marker({\n            draggable: true,\n            color: '#003262',\n          }),\n          new mapboxgl.Marker({\n            draggable: true,\n            color: '#3B7EA1',\n          }),\n          new mapboxgl.Marker({\n            draggable: true,\n            color: '#FDB515',\n          }),\n          new mapboxgl.Marker({\n            draggable: true,\n            color: '#C4820E',\n          }),\n          new mapboxgl.Marker({\n            draggable: true,\n            color: '#FFFFFF',\n          }),\n        ];\n\n        this.markers[0].on('drag',    () => this.handleMarkerChange(0, this.markers[0].getLngLat()));\n        this.markers[1].on('drag',    () => this.handleMarkerChange(1, this.markers[1].getLngLat()));\n        this.markers[2].on('drag',    () => this.handleMarkerChange(2, this.markers[2].getLngLat()));\n        this.markers[3].on('drag',    () => this.handleMarkerChange(3, this.markers[3].getLngLat()));\n        this.markers[4].on('drag',    () => this.handleMarkerChange(4, this.markers[4].getLngLat()));\n\n        this.markers[0].on('dragend', () => this.handleMarkerChange(0, this.markers[0].getLngLat(), true));\n        this.markers[1].on('dragend', () => this.handleMarkerChange(1, this.markers[1].getLngLat(), true));\n        this.markers[2].on('dragend', () => this.handleMarkerChange(2, this.markers[2].getLngLat(), true));\n        this.markers[3].on('dragend', () => this.handleMarkerChange(3, this.markers[3].getLngLat(), true));\n        this.markers[4].on('dragend', () => this.handleMarkerChange(4, this.markers[4].getLngLat(), true));\n\n        // Have to hardcode in or else weird behavior happens\n        this.markers[0].setLngLat(LngLat(-122.27246573870457,37.87077721085865)).addTo(map);\n        this.markers[1].setLngLat(LngLat(-122.25556530361206,37.88257575090472)).addTo(map);\n        this.markers[2].setLngLat(LngLat(-122.24414248656030,37.87273856363721)).addTo(map);\n        this.markers[3].setLngLat(LngLat(-122.26074299964147,37.86081212396496)).addTo(map);\n        this.markers[4].setLngLat(LngLat(-122.26074299964147,37.86081212396496)).addTo(map);\n\n        map.addSource('borderTB', {\n          \"type\": \"geojson\",\n          \"data\": {\n            \"type\": \"Feature\",\n            \"properties\": {},\n            \"geometry\": {\n              \"type\": \"LineString\",\n              \"coordinates\": [\n              ]\n            }\n          }\n        });\n        map.addLayer({\n          \"id\": \"borderTB\",\n          \"type\": \"line\",\n          \"source\": \"borderTB\",\n          \"paint\": {\n            \"line-color\": \"#003262\",\n            \"line-opacity\": 0.5,\n            \"line-width\": 4\n          }\n        });\n        map.addSource('borderLR', {\n          \"type\": \"geojson\",\n          \"data\": {\n            \"type\": \"Feature\",\n            \"properties\": {},\n            \"geometry\": {\n              \"type\": \"LineString\",\n              \"coordinates\": [\n              ]\n            }\n          }\n        });\n        map.addLayer({\n          \"id\": \"borderLR\",\n          \"type\": \"line\",\n          \"source\": \"borderLR\",\n          \"paint\": {\n            \"line-color\": \"#FDB515\",\n            \"line-opacity\": 0.5,\n            \"line-width\": 4\n          }\n        });\n        this.calculateBorders();\n      }\n\n      map.on('click', (e) => {\n        // debug(`${e.lngLat}`);\n      });\n      map.on('mousedown', () => {\n        if (this.imageOverlayAdded) {\n          map.setPaintProperty('imageOverlay', 'raster-opacity', 0.3)\n        }\n      });\n      map.on('mouseup', () => {\n        if (this.imageOverlayAdded) {\n          map.setPaintProperty('imageOverlay', 'raster-opacity', topOpacity)\n        }\n      });\n      setTimeout(() => {\n        if (props.initialMap) {\n          this.setImage(props.initialMap);\n        }\n      }, 500)\n\n      // Make things easier for a noob like me who uses Google Maps\n      map.boxZoom.disable();\n      map.doubleClickZoom.disable(); // Users might double click a lot to see the transparent version\n      map.addControl(new mapboxgl.NavigationControl());\n      map.addControl(new mapboxgl.AttributionControl({\n        compact: true,\n      }), 'top-left');\n\n      props.signup((newMapId) => {\n        this.setImage(newMapId);\n      });\n    }\n  }\n\n\n  componentDidMount() {\n    // mapboxgl.accessToken = null; // This app does not use mapbox maps. Only the JS library which is free\n    var map = new mapboxgl.Map(mapboxOptions);\n    this.map = map;\n    window.map = map;\n\n    this.map.on('load', this.setupMap);\n\n  }\n\n  render() {\n    return (\n      <div className=\"Mapp\">\n        <div id=\"map\"></div>\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\nimport './SidebarItem.css';\n\nclass SidebarItem extends Component {\n  constructor(props) {\n    super();\n    this.scan = props.scan;\n    this.scanId = props.scanId;\n    this.props = props;\n  }\n  render() {\n    const scan = this.scan;\n    return (\n      <div className={`SidebarItem ${this.props.active ? 'is-active':''}`}>\n        <a href={`#${this.scanId}`} className=\"SidebarItem__label\">{scan.year}</a>\n        {/*<div className=\"SidebarItem__content\">Blah</div>*/}\n      </div>\n    );\n  }\n}\n\nexport default SidebarItem;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Mapp, scans } from './Mapp.js';\nimport SidebarItem from './SidebarItem.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      currentMap: '',\n    };\n\n    this.notifyChild = null;\n\n    // Bad code\n    this.signup = (f) => {\n      this.notifyChild = f;\n    };\n\n    let initialMap = window.location.hash.replace(/^#/,'');\n    if (scans[initialMap]) {\n      this.state.currentMap = initialMap;\n    } else {\n      window.location.hash = '#1979-baldwin';\n      this.state.currentMap = '#1979-baldwin';\n    }\n\n\n    window.addEventListener(\"hashchange\", () => {\n      let newMap = window.location.hash.replace(/^#/,'')\n      this.setState({\n        currentMap: newMap,\n      });\n      if (this.notifyChild) {\n        this.notifyChild(newMap)\n      }\n    }, false);\n  }\n  render() {\n    let sidebarList = [];\n    for (let scanId in scans) {\n      let active = this.state.currentMap === scanId;\n      sidebarList.push(<SidebarItem key={scanId} active={active} scanId={scanId} scan={scans[scanId]} />)\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {sidebarList}\n        </div>\n        <div className=\"App__mapp\">\n          <Mapp initialMap={this.state.currentMap} signup={this.signup}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}