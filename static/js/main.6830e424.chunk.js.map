{"version":3,"sources":["Mapp.js","SidebarItem.js","App.js","serviceWorker.js","index.js"],"names":["mapboxgl","window","debugMode","location","hostname","LngLat","lng","lat","arrayify","lngLatLike","minus","lngLat1","lngLat2","add","average","_len","arguments","length","lngLats","Array","_key","reduce","sum","ll","map","l","topOpacity","scans","1984-libraries","year","url","corners","1979-baldwin","1978-libraries","1976-guide","1969-campus","1965-libraries","1962-long-range-development-plan","1972-campus-brightened","1933-campus","1910","fullUrl","partUrl","feature","_ref","_ref2","Object","slicedToArray","type","properties","geometry","coordinates","McCone_Hall","mapboxOptions","container","zoom","minZoom","maxZoom","style","version","sources","raster-tiles","tiles","tileSize","layers","id","source","minzoom","maxzoom","maxBounds","customAttribution","center","Mapp","_Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","imageOverlayAdded","state","lastMarkerUpdate","lastCenterAverage","currentOverlaySourceName","historyStack","addSource","scanId","console","log","setImageOverlay","getLayer","paint","setPaintProperty","addLayer","raster-opacity","setImage","scan","Error","currentSource","setNewMarkers","updateCorners","markers","setLngLat","getLngLat","updateCornersAutomated","force","automated","Date","now","setTimeout","getSource","setCoordinates","logScanConfig","push","slice","calculateBorders","concat","JSON","stringify","undo","pop","newCorners","handleMarkerChange","cornerId","lngLat","delta","m0","m1","m2","m3","setData","features","setupMap","Marker","draggable","color","on","addTo","data","line-color","line-opacity","line-width","e","initialMap","boxZoom","disable","doubleClickZoom","addControl","NavigationControl","AttributionControl","compact","signup","newMapId","document","addEventListener","event","ctrlKey","metaKey","key","inherits","createClass","value","Map","react_default","a","createElement","className","Component","SidebarItem","active","href","App","currentMap","notifyChild","f","hash","replace","newMap","setState","sidebarList","src_SidebarItem_0","Mapp_Mapp","Boolean","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6830e424.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './mapbox-gl.css';\nimport './Mapp.css';\nimport debug from './debug';\nconst mapboxgl = window.mapboxgl\nconst debugMode = window.location.hostname === 'localhost'\n\n\n\n// Ohhh ... HAHAHHA ... funny ... :( lat and lng are \"inverted\" in mapbox\n// Always use these utility functions\nconst LatLng = (lat, lng) => [lng, lat];\nconst LngLat = (lng, lat) => [lng, lat];\nconst arrayify = (lngLatLike) => (lngLatLike.lng) ? [lngLatLike.lng,lngLatLike.lat] : lngLatLike;\nconst minus = (lngLat1, lngLat2) => [arrayify(lngLat1)[0]-arrayify(lngLat2)[0], arrayify(lngLat1)[1]-arrayify(lngLat2)[1]]\nconst add = (lngLat1, lngLat2) => [arrayify(lngLat1)[0]+arrayify(lngLat2)[0], arrayify(lngLat1)[1]+arrayify(lngLat2)[1]]\nconst average = (...lngLats) => lngLats.reduce((sum,ll) => [ll.lng+sum[0],ll.lat+sum[1]],[0,0]).map(l => l/lngLats.length)\n\nlet topOpacity = 0.9;\n\n\nexport const scans = {\n  // 1875: I couldnt find a mapping that I'm comfortable with. Espeecially for something at the top of the list\n  // '1875-strawberry-valley': {\"year\":\"1875\",\"url\":\"./fair-use-non-free-content/1875-strawberry-valley.jpg\",\"corners\":[[-122.21973093144322,37.88741986836331],[-122.21963807527183,37.86455175787742],[-122.27137343011051,37.86331916514537],[-122.27172010131322,37.88612304969698]]},\n\n  '1984-libraries': {\"year\":\"1984\",\"url\":\"./fair-use-non-free-content/1984-libraries.jpg\",\"corners\":[[-122.27075908931513,37.877197923288705],[-122.24277127446622,37.880955076775194],[-122.23967429500188,37.866663373248414],[-122.26785940109859,37.863006247345936]]},\n  '1979-baldwin': {year: '1979', url:'./fair-use-non-free-content/1979-baldwin.jpg', corners: [[-122.27242632492538,37.87075445739155], [-122.25552588983287,37.88255299743762], [-122.24401514609337,37.87263226468354], [-122.26089919151718,37.86083689391005],]},\n  '1978-libraries': {\"year\":\"1978\",\"url\":\"./fair-use-non-free-content/1978-libraries.jpg\",\"corners\":[[-122.2701000195511,37.87636827020319],[-122.243487023854,37.88003463476477],[-122.24031271567989,37.86637727613014],[-122.26732743196749,37.862897933977194]]},\n  '1976-guide': {\"year\":\"1976\",\"url\":\"./fair-use-non-free-content/1976-guide.jpg\",\"corners\":[[-122.27630691497926,37.875087759002525],[-122.25102700831442,37.87840395824955],[-122.24145272393383,37.83314956332889],[-122.26678778880266,37.829912831945094]]},\n  '1969-campus': {\"year\":\"1969\",\"url\":\"./fair-use-non-free-content/1969-campus.jpg\",\"corners\":[[-122.27014967661651,37.87676446014055],[-122.24665395469927,37.880049635761566],[-122.24406902036667,37.86816237839675],[-122.26763640309211,37.86499235790795]]},\n  // '1969-points-of-interest': {year: '1969', url:'./fair-use-non-free-content/1969-points-of-interest.jpg', corners: [[-122.27242632492538,37.87075445739155], [-122.25552588983287,37.88255299743762], [-122.24401514609337,37.87263226468354], [-122.26089919151718,37.86083689391005],]},\n  '1965-libraries': {\"year\":\"1965\",\"url\":\"./fair-use-non-free-content/1965-libraries.jpg\",\"corners\":[[-122.26738253946081,37.875197184902774],[-122.23902012599287,37.878809448201665],[-122.23718404449107,37.870062386874054],[-122.26553122935505,37.86643908068625]]},\n  '1962-long-range-development-plan': {\"year\":\"1962\",\"url\":\"./fair-use-non-free-content/1962-long-range-development-plan.jpg\",\"corners\":[[-122.24518564788491,37.884268884147176],[-122.2415246334588,37.86601203450013],[-122.27118504469288,37.86216035693175],[-122.27482939734136,37.88036805298445]]},\n  '1972-campus-brightened': {\"year\":\"1972\",\"url\":\"./fair-use-non-free-content/1972-campus-brightened.jpg\",\"corners\":[[-122.27021754368293,37.87615669295823],[-122.24681735760754,37.879146454895974],[-122.24404090563817,37.866030492749104],[-122.2676143888205,37.86302420608884]]},\n  '1933-campus': {\"year\":\"1933\",\"url\":\"./fair-use-non-free-content/1933-campus.jpg\",\"corners\":[[-122.24321841791497,37.880785600466496],[-122.24056329771855,37.86814651693754],[-122.26894970030844,37.86457049634011],[-122.27136122383384,37.8771585560435]]},\n  '1910': {year: '1910', url:'./fair-use-non-free-content/1910-smaller.jpg', corners: [[-122.25368381624293,37.87666271788129], [-122.25205864680986,37.8690054551667], [-122.26567321115618,37.867273073426304], [-122.26725246910868,37.87479602627526],]},\n};\n\nconst fullUrl = partUrl => partUrl;\n\nconst feature = ([fromLngLat, toLngLat]) => ({\n  \"type\": \"Feature\",\n  \"properties\": {},\n  \"geometry\": {\n    \"type\": \"LineString\",\n    \"coordinates\": [\n      fromLngLat,\n      toLngLat,\n    ]\n  },\n});\n\n\n\n// Thank you, Earth Science & Map Library <3\nconst McCone_Hall = LatLng(37.873931, -122.259491)\n\nconst mapboxOptions = {\n  container: 'map', // container id\n  zoom: 13,\n  minZoom: 11,\n  maxZoom: 18,\n  style: {\n    \"version\": 8,\n    \"sources\": {\n      \"raster-tiles\": {\n        \"type\": \"raster\",\n        \"tiles\": [\n          \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n          // \"http://b.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        ],\n        \"tileSize\": 128\n      }\n    },\n    \"layers\": [{\n      \"id\": \"simple-tiles\",\n      \"type\": \"raster\",\n      \"source\": \"raster-tiles\",\n      \"minzoom\": 0,\n      \"maxzoom\": 24\n    }]\n  },\n\n  maxBounds: [LngLat(-122.552, 37.673), LngLat(-122.0467, 37.987)],\n\n  // Attribution from: http://services.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer?f=pjson\n  customAttribution: 'Satellite map source: Esri, DigitalGlobe, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community',\n  center: McCone_Hall,\n}\n\n\n\nexport class Mapp extends Component {\n  constructor(props) {\n    super();\n    this.imageOverlayAdded = false;\n    this.sources = {}; // Doesn't actually get you the source\n    this.state = {\n    }\n\n    let map;\n    this.lastMarkerUpdate = 0;\n    this.lastCenterAverage = [0,0];\n\n    this.currentOverlaySourceName = null;\n    this.historyStack = []; // For undoing\n\n\n\n    this.addSource = (scanId, coordinates) => {\n      if (!this.sources[scanId]) {\n        console.log('adding source')\n        this.sources[scanId] = this.map.addSource(scanId, {\n          type: 'image',\n          url: fullUrl(scans[scanId].url),\n          coordinates: scans[scanId].corners,\n        });\n      }\n    }\n\n    this.setImageOverlay = (scanId) => {\n      if (!this.imageOverlayAdded) {\n        this.imageOverlayAdded = true;\n        this.currentOverlaySourceName = scanId;\n\n        this.map.addLayer({\n          \"id\": \"imageOverlay\",\n          \"source\": scanId,\n          \"type\": \"raster\",\n          \"paint\": {\n            \"raster-opacity\": topOpacity\n          },\n        });\n      } else {\n        map.getLayer('imageOverlay').source = scanId;\n        console.log(map.getLayer('imageOverlay').paint['raster-opacity'] = topOpacity);\n          map.setPaintProperty('imageOverlay', 'raster-opacity', topOpacity)\n      }\n    }\n\n    this.setImage = scanId => {\n      const scan = scans[scanId];\n      if (!scan) {\n        throw new Error('Scan doesnt exist:', scanId);\n      }\n      this.currentSource = scanId;\n      this.currentOverlaySourceName = scanId;\n      this.addSource(scanId, scan.corners);\n      this.setImageOverlay(scanId);\n\n      this.setNewMarkers(scan.corners);\n      this.updateCorners(true);\n    }\n    this.setNewMarkers = (corners) => {\n      if (!debugMode) return;\n      this.markers[0].setLngLat(corners[0])\n      this.markers[1].setLngLat(corners[1])\n      this.markers[2].setLngLat(corners[2])\n      this.markers[3].setLngLat(corners[3])\n\n      // the middle point\n      this.lastCenterAverage = average(this.markers[0].getLngLat(),this.markers[1].getLngLat(),this.markers[2].getLngLat(),this.markers[3].getLngLat());\n      this.markers[4].setLngLat(this.lastCenterAverage);\n    }\n\n    this.updateCornersAutomated = () => {\n      this.updateCorners(false, true);\n    }\n    this.updateCorners = (force, automated) => {\n      if (this.currentSource == null) {\n        return;\n      }\n\n      // Debounce or else we will consistently crash\n      if (!force && Date.now() - this.lastMarkerUpdate < 300) {\n        if (!automated) {\n          setTimeout(this.updateCornersAutomated, 300 - Date.now() - this.lastMarkerUpdate + 2);\n        }\n        return;\n      }\n      this.lastMarkerUpdate = Date.now();\n\n      let source = this.map.getSource(this.currentOverlaySourceName);\n      let scan = scans[this.currentOverlaySourceName];\n\n      source.setCoordinates(scan.corners);\n      this.logScanConfig();\n      this.setNewMarkers(scan.corners);\n      this.historyStack.push(scan.corners.slice(0))\n      this.calculateBorders();\n    }\n    this.logScanConfig = () => {\n      let scan = scans[this.currentOverlaySourceName];\n      console.log(`'${this.currentOverlaySourceName}': ${JSON.stringify(scan,null,0)},`)\n    }\n    this.undo = () => {\n      if (this.historyStack.length > 0) {\n        this.historyStack.pop();\n        let newCorners = this.historyStack[this.historyStack.length-1]\n        let scan = scans[this.currentOverlaySourceName];\n        scan.corners = newCorners;\n        this.setNewMarkers(scan.corners);\n        this.calculateBorders();\n\n        let source = this.map.getSource(this.currentOverlaySourceName);\n        source.setCoordinates(scan.corners);\n        this.logScanConfig();\n      }\n    }\n    this.handleMarkerChange = (cornerId, lngLat, force) => {\n      if (this.currentSource == null) {\n        return;\n      }\n\n      let source = this.map.getSource(this.currentOverlaySourceName);\n      let scan = scans[this.currentOverlaySourceName];\n      if (!source || !scan) {\n        console.log('Invariant breached Something was empty',source,scan)\n        return;\n      }\n\n      if (cornerId === 4) {\n        // four leaf clover! Oh wait, it's zero indexed ... FIVE LEAF CLOVER!!!\n        const delta = minus(lngLat,this.lastCenterAverage)\n        scan.corners[0] = add(this.markers[0].getLngLat(), delta);\n        scan.corners[1] = add(this.markers[1].getLngLat(), delta);\n        scan.corners[2] = add(this.markers[2].getLngLat(), delta);\n        scan.corners[3] = add(this.markers[3].getLngLat(), delta);\n      } else {\n        scan.corners[0] = arrayify(this.markers[0].getLngLat());\n        scan.corners[1] = arrayify(this.markers[1].getLngLat());\n        scan.corners[2] = arrayify(this.markers[2].getLngLat());\n        scan.corners[3] = arrayify(this.markers[3].getLngLat());\n      }\n      this.updateCorners(force);\n    }\n\n    this.calculateBorders = () => {\n      if (!debugMode) return;\n      let m0 = [this.markers[0].getLngLat().lng, this.markers[0].getLngLat().lat];\n      let m1 = [this.markers[1].getLngLat().lng, this.markers[1].getLngLat().lat];\n      let m2 = [this.markers[2].getLngLat().lng, this.markers[2].getLngLat().lat];\n      let m3 = [this.markers[3].getLngLat().lng, this.markers[3].getLngLat().lat];\n      let sourceTB = this.map.getSource('borderTB');\n      sourceTB.setData({\n        \"type\": \"FeatureCollection\",\n        \"features\": [\n          feature([\n            m2,\n            add(m2,minus(m0, m1)),\n          ]),\n          feature([\n            m3,\n            add(m3,minus(m1, m0)),\n          ]),\n          feature([\n            m0,\n            add(m0,minus(m2, m3)),\n          ]),\n          feature([\n            m1,\n            add(m1,minus(m3, m2)),\n          ]),\n        ]\n      });\n      let sourceLR = this.map.getSource('borderLR');\n      sourceLR.setData({\n        \"type\": \"FeatureCollection\",\n        \"features\": [\n          feature([\n            m3,\n            add(m3,minus(m1, m2)),\n          ]),\n          feature([\n            m0,\n            add(m0,minus(m2, m1)),\n          ]),\n          feature([\n            m1,\n            add(m1,minus(m3, m0)),\n          ]),\n          feature([\n            m2,\n            add(m2,minus(m0, m3)),\n          ]),\n        ]\n      });\n    }\n\n    this.setupMap = () => {\n      map = this.map\n\n      if (debugMode) {\n        // Markers are useful for debugging\n        this.markers = [\n          new mapboxgl.Marker({\n            draggable: true,\n            color: '#003262',\n          }),\n          new mapboxgl.Marker({\n            draggable: true,\n            color: '#3B7EA1',\n          }),\n          new mapboxgl.Marker({\n            draggable: true,\n            color: '#FDB515',\n          }),\n          new mapboxgl.Marker({\n            draggable: true,\n            color: '#C4820E',\n          }),\n          new mapboxgl.Marker({\n            draggable: true,\n            color: '#FFFFFF',\n          }),\n        ];\n\n        this.markers[0].on('drag',    () => this.handleMarkerChange(0, this.markers[0].getLngLat()));\n        this.markers[1].on('drag',    () => this.handleMarkerChange(1, this.markers[1].getLngLat()));\n        this.markers[2].on('drag',    () => this.handleMarkerChange(2, this.markers[2].getLngLat()));\n        this.markers[3].on('drag',    () => this.handleMarkerChange(3, this.markers[3].getLngLat()));\n        this.markers[4].on('drag',    () => this.handleMarkerChange(4, this.markers[4].getLngLat()));\n\n        this.markers[0].on('dragend', () => this.handleMarkerChange(0, this.markers[0].getLngLat(), true));\n        this.markers[1].on('dragend', () => this.handleMarkerChange(1, this.markers[1].getLngLat(), true));\n        this.markers[2].on('dragend', () => this.handleMarkerChange(2, this.markers[2].getLngLat(), true));\n        this.markers[3].on('dragend', () => this.handleMarkerChange(3, this.markers[3].getLngLat(), true));\n        this.markers[4].on('dragend', () => this.handleMarkerChange(4, this.markers[4].getLngLat(), true));\n\n        // Have to hardcode in or else weird behavior happens\n        this.markers[0].setLngLat(LngLat(-122.27246573870457,37.87077721085865)).addTo(map);\n        this.markers[1].setLngLat(LngLat(-122.25556530361206,37.88257575090472)).addTo(map);\n        this.markers[2].setLngLat(LngLat(-122.24414248656030,37.87273856363721)).addTo(map);\n        this.markers[3].setLngLat(LngLat(-122.26074299964147,37.86081212396496)).addTo(map);\n        this.markers[4].setLngLat(LngLat(-122.26074299964147,37.86081212396496)).addTo(map);\n\n        map.addSource('borderTB', {\n          \"type\": \"geojson\",\n          \"data\": {\n            \"type\": \"Feature\",\n            \"properties\": {},\n            \"geometry\": {\n              \"type\": \"LineString\",\n              \"coordinates\": [\n              ]\n            }\n          }\n        });\n        map.addLayer({\n          \"id\": \"borderTB\",\n          \"type\": \"line\",\n          \"source\": \"borderTB\",\n          \"paint\": {\n            \"line-color\": \"#003262\",\n            \"line-opacity\": 0.5,\n            \"line-width\": 4\n          }\n        });\n        map.addSource('borderLR', {\n          \"type\": \"geojson\",\n          \"data\": {\n            \"type\": \"Feature\",\n            \"properties\": {},\n            \"geometry\": {\n              \"type\": \"LineString\",\n              \"coordinates\": [\n              ]\n            }\n          }\n        });\n        map.addLayer({\n          \"id\": \"borderLR\",\n          \"type\": \"line\",\n          \"source\": \"borderLR\",\n          \"paint\": {\n            \"line-color\": \"#FDB515\",\n            \"line-opacity\": 0.5,\n            \"line-width\": 4\n          }\n        });\n        this.calculateBorders();\n      }\n\n      map.on('click', (e) => {\n        // debug(`${e.lngLat}`);\n      });\n      map.on('mousedown', () => {\n        if (this.imageOverlayAdded) {\n          map.setPaintProperty('imageOverlay', 'raster-opacity', 0.3)\n        }\n      });\n      map.on('mouseup', () => {\n        if (this.imageOverlayAdded) {\n          map.setPaintProperty('imageOverlay', 'raster-opacity', topOpacity)\n        }\n      });\n      setTimeout(() => {\n        if (props.initialMap) {\n          this.setImage(props.initialMap);\n        }\n      }, 500)\n\n      // Make things easier for a noob like me who uses Google Maps\n      map.boxZoom.disable();\n      map.doubleClickZoom.disable(); // Users might double click a lot to see the transparent version\n      map.addControl(new mapboxgl.NavigationControl());\n      map.addControl(new mapboxgl.AttributionControl({\n        compact: true,\n      }), 'top-left');\n\n      props.signup((newMapId) => {\n        this.setImage(newMapId);\n      });\n\n      document.addEventListener('keydown', (event) => {\n        if ((event.ctrlKey || event.metaKey) && event.key === 'z') {\n          this.undo()\n        }\n\n        if (debugMode && event.key === 't') {\n          topOpacity = (topOpacity === 0.9) ? 0.5 : 0.9;\n          map.setPaintProperty('imageOverlay', 'raster-opacity', topOpacity)\n        }\n      });\n    }\n  }\n\n\n  componentDidMount() {\n    // mapboxgl.accessToken = null; // This app does not use mapbox maps. Only the JS library which is free\n    var map = new mapboxgl.Map(mapboxOptions);\n    this.map = map;\n    window.map = map;\n\n    this.map.on('load', this.setupMap);\n\n  }\n\n  render() {\n    return (\n      <div className=\"Mapp\">\n        <div id=\"map\"></div>\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\nimport './SidebarItem.css';\n\nclass SidebarItem extends Component {\n  constructor(props) {\n    super();\n    this.scan = props.scan;\n    this.scanId = props.scanId;\n    this.props = props;\n  }\n  render() {\n    const scan = this.scan;\n    return (\n      <div className={`SidebarItem ${this.props.active ? 'is-active':''}`}>\n        <a href={`#${this.scanId}`} className=\"SidebarItem__label\">{scan.year}</a>\n        {/*<div className=\"SidebarItem__content\">Blah</div>*/}\n      </div>\n    );\n  }\n}\n\nexport default SidebarItem;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Mapp, scans } from './Mapp.js';\nimport SidebarItem from './SidebarItem.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      currentMap: '',\n    };\n\n    this.notifyChild = null;\n\n    // Bad code\n    this.signup = (f) => {\n      this.notifyChild = f;\n    };\n\n    let initialMap = window.location.hash.replace(/^#/,'');\n    if (scans[initialMap]) {\n      this.state.currentMap = initialMap;\n    } else {\n      window.location.hash = '#1979-baldwin';\n      this.state.currentMap = '1979-baldwin';\n    }\n\n\n    window.addEventListener(\"hashchange\", () => {\n      let newMap = window.location.hash.replace(/^#/,'')\n      this.setState({\n        currentMap: newMap,\n      });\n      if (this.notifyChild) {\n        this.notifyChild(newMap)\n      }\n    }, false);\n  }\n  render() {\n    let sidebarList = [];\n    for (let scanId in scans) {\n      let active = this.state.currentMap === scanId;\n      sidebarList.push(<SidebarItem key={scanId} active={active} scanId={scanId} scan={scans[scanId]} />)\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {sidebarList}\n        </div>\n        <div className=\"App__mapp\">\n          <Mapp initialMap={this.state.currentMap} signup={this.signup}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}